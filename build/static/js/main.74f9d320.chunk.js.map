{"version":3,"sources":["components/Footer.js","components/Notification.js","components/Togglable.js","components/LoginForm.js","components/WordForm.js","services/login.js","services/words.js","App.js","index.js"],"names":["Footer","style","color","fontStyle","fontSize","Notification","message","type","className","Togglable","React","forwardRef","props","ref","useState","visible","setVisible","hideWhenVisible","display","showWhenVisible","toggleVisibility","useImperativeHandle","id","buttonLabel","onClick","children","displayName","LoginForm","handleSubmit","username","setUsername","password","setPassword","onSubmit","event","preventDefault","value","onChange","target","WordForm","createWord","newWord","setNewWord","newWordDkDefinition","setWewWordDkDefinition","lex","definitionDk","createdate","Date","toISOString","updatedate","login","credentials","a","axios","post","response","data","baseUrl","token","getAll","get","then","create","newObject","config","headers","Authorization","update","put","setToken","newToken","App","words","setWords","notificationMessage","setNotificationMessage","notificationType","setNotificationType","user","setUser","wordFormRef","useRef","useEffect","wordService","initialWords","loggedUserJSON","window","sessionStorage","getItem","console","log","JSON","parse","addWord","wordObject","current","returnedWord","concat","handleLogin","userObject","loginService","setItem","stringify","notify","loginForm","setTimeout","name","removeItem","map","word","i","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.74f9d320.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst Footer = () => {\r\n  const footerStyle = {\r\n    color: 'green',\r\n    fontStyle: 'italic',\r\n    fontSize: 16,\r\n  };\r\n\r\n  return (\r\n    <div style={footerStyle}>\r\n      <br />\r\n      <em>Learning danish with one word a day.</em>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Footer;\r\n","import React from 'react';\r\n\r\nconst Notification = ({ message, type }) => {\r\n  if (message === null) {\r\n    return null;\r\n  }\r\n\r\n  return <div className={type}>{message}</div>;\r\n};\r\n\r\nexport default Notification;\r\n","import React, { useState, useImperativeHandle } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Togglable = React.forwardRef((props, ref) => {\r\n  const [visible, setVisible] = useState(false);\r\n\r\n  const hideWhenVisible = { display: visible ? 'none' : '' };\r\n  const showWhenVisible = { display: visible ? '' : 'none' };\r\n\r\n  const toggleVisibility = () => {\r\n    setVisible(!visible);\r\n  };\r\n\r\n  useImperativeHandle(ref, () => {\r\n    return {\r\n      toggleVisibility,\r\n    };\r\n  });\r\n\r\n  return (\r\n    <div>\r\n      <div style={hideWhenVisible}>\r\n        <button id={props.buttonLabel} onClick={toggleVisibility}>{props.buttonLabel}</button>\r\n      </div>\r\n      <div style={showWhenVisible} className=\"togglableContent\">\r\n        {props.children}\r\n        <button onClick={toggleVisibility}>cancel</button>\r\n      </div>\r\n    </div>\r\n  );\r\n});\r\n\r\nTogglable.propTypes = {\r\n  buttonLabel: PropTypes.string.isRequired,\r\n};\r\n\r\nTogglable.displayName = 'Togglable';\r\n\r\nexport default Togglable;\r\n","import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst LoginForm = ({ handleSubmit }) => {\r\n  const [username, setUsername] = useState('');\r\n  const [password, setPassword] = useState('');\r\n\r\n  const handleUsernameChange = (event) => {\r\n    setUsername(event.target.value);\r\n  };\r\n\r\n  const handlePasswordChange = (event) => {\r\n    setPassword(event.target.value);\r\n  };\r\n\r\n  const createUser = (event) => {\r\n    event.preventDefault();\r\n\r\n    handleSubmit({\r\n      username,\r\n      password,\r\n    });\r\n\r\n    setUsername('');\r\n    setPassword('');\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h2>Login</h2>\r\n\r\n      <form onSubmit={createUser}>\r\n        <div>\r\n          username\r\n          <input\r\n            id=\"username\"\r\n            value={username}\r\n            onChange={handleUsernameChange}\r\n          />\r\n        </div>\r\n        <div>\r\n          password\r\n          <input\r\n            id=\"password\"\r\n            type=\"password\"\r\n            value={password}\r\n            onChange={handlePasswordChange}\r\n          />\r\n        </div>\r\n        <button id=\"login-button\" type=\"submit\">\r\n          login\r\n        </button>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nLoginForm.propTypes = {\r\n  handleSubmit: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default LoginForm;\r\n","import React, { useState } from 'react';\r\n\r\nconst WordForm = ({ createWord  }) => {\r\n  const [newWord, setNewWord] = useState('');\r\n  const [newWordDkDefinition, setWewWordDkDefinition] = useState('');\r\n\r\n  const handleChange = (event) => {\r\n    setNewWord(event.target.value);\r\n  };\r\n\r\n  const handleDkDefinitionChange = (event) => {\r\n    setWewWordDkDefinition(event.target.value);\r\n  };\r\n\r\n  const addWord = (event) => {\r\n    event.preventDefault();\r\n\r\n    createWord({\r\n      lex: newWord,\r\n      definitionDk: newWordDkDefinition,\r\n      createdate: new Date().toISOString(),\r\n      updatedate: new Date().toISOString(),\r\n    });\r\n\r\n    setNewWord('');\r\n    setWewWordDkDefinition('');\r\n  };\r\n\r\n  return (\r\n    <div className=\"formDiv\">\r\n      <h2>Create a new word</h2>\r\n\r\n      <form onSubmit={addWord}>\r\n        <input id=\"newWordInput\" value={newWord} onChange={handleChange} />\r\n        <input id=\"newWordDefinitionDk\" value={newWordDkDefinition} onChange={handleDkDefinitionChange} />\r\n        <button id=\"newWordButton\" type=\"submit\">save</button>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default WordForm;\r\n","import axios from 'axios';\r\nconst baseUrl = '/api/login';\r\n\r\nconst login = async (credentials) => {\r\n  const response = await axios.post(baseUrl, credentials);\r\n  return response.data;\r\n};\r\n\r\nexport default { login };\r\n","import axios from 'axios';\r\nconst baseUrl = '/api/words';\r\n\r\nlet token = null;\r\n\r\nconst setToken = (newToken) => {\r\n  token = `bearer ${newToken}`;\r\n};\r\n\r\n// const get = (id) => {\r\n//   const request = axios.get(`${baseUrl}/${id}`);\r\n//   return request.then((response) => response.data);\r\n// };\r\n\r\nconst getAll = () => {\r\n  const request = axios.get(baseUrl);\r\n  return request.then((response) => response.data);\r\n};\r\n\r\nconst create = async (newObject) => {\r\n  const config = {\r\n    headers: { Authorization: token },\r\n  };\r\n  const response = await axios.post(baseUrl, newObject, config);\r\n  return response.data;\r\n};\r\n\r\nconst update = (id, newObject) => {\r\n  const request = axios.put(`${baseUrl}/${id}`, newObject);\r\n  return request.then((response) => response.data);\r\n};\r\n\r\nexport default { getAll, create, update, setToken };\r\n","import Footer from './components/Footer';\r\nimport React, { useState, useEffect, useRef } from 'react';\r\nimport Notification from './components/Notification';\r\nimport Togglable from './components/Togglable';\r\nimport LoginForm from './components/LoginForm';\r\nimport WordForm from './components/WordForm';\r\n\r\nimport loginService from './services/login';\r\nimport wordService from './services/words';\r\n\r\nfunction App() {\r\n\r\n  const [words, setWords] = useState([]);\r\n\r\n  const [notificationMessage, setNotificationMessage] = useState('');\r\n  const [notificationType, setNotificationType] = useState('');\r\n  const [user, setUser] = useState(null);\r\n\r\n  const wordFormRef = useRef();\r\n  useEffect(() => {\r\n    wordService.getAll().then((initialWords) => {\r\n      setWords(initialWords);\r\n    });\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    const loggedUserJSON = window.sessionStorage.getItem('loggedNoteappUser');\r\n    if (loggedUserJSON) {\r\n      console.log('loggedUserJSON', loggedUserJSON);\r\n      const user = JSON.parse(loggedUserJSON);\r\n      setUser(user);\r\n      wordService.setToken(user.token);\r\n    }\r\n  }, []);\r\n\r\n  const addWord = (wordObject) => {\r\n    wordFormRef.current.toggleVisibility();\r\n\r\n    wordService.create(wordObject).then((returnedWord) => {\r\n      setWords(words.concat(returnedWord));\r\n    });\r\n  };\r\n\r\n  const handleLogin = async (userObject) => {\r\n    let username = userObject.username;\r\n    let password = userObject.password;\r\n\r\n    try {\r\n      const user = await loginService.login({\r\n        username,\r\n        password,\r\n      });\r\n\r\n      window.sessionStorage.setItem('loggedNoteappUser', JSON.stringify(user));\r\n\r\n      wordService.setToken(user.token);\r\n      setUser(user);\r\n    } catch (exception) {\r\n      notify('wrong credentials', 'error');\r\n    }\r\n  };\r\n\r\n  const loginForm = () => {\r\n    return (\r\n      <Togglable buttonLabel=\"login\">\r\n        <LoginForm handleSubmit={handleLogin} />\r\n      </Togglable>\r\n    );\r\n  };\r\n\r\n  const logout = () => {\r\n    window.sessionStorage.removeItem('loggedNoteappUser');\r\n\r\n    notify(`Bye, ${user.name}`, 'success');\r\n\r\n    wordService.setToken(null);\r\n    setUser(null);\r\n    loginForm();\r\n  };\r\n\r\n  const notify = (notificationMessage, notificationType) => {\r\n    setNotificationMessage(notificationMessage);\r\n    setNotificationType(notificationType);\r\n\r\n    setTimeout(() => {\r\n      setNotificationMessage('');\r\n      setNotificationType('');\r\n    }, 5000);\r\n  };\r\n\r\n  const wordForm = () => (\r\n    <Togglable buttonLabel=\"new word\" ref={wordFormRef}>\r\n      <WordForm createWord={addWord} />\r\n    </Togglable>\r\n  );\r\n\r\n  return (\r\n    <div>\r\n      <h1>Wehee</h1>\r\n      <Notification message={notificationMessage} type={notificationType} />\r\n\r\n\r\n      {user === null ? (\r\n        loginForm()\r\n      ) : (\r\n        <div>\r\n          <p>\r\n            {user.name} logged in\r\n            <button onClick={() => logout()}> logout </button>\r\n          </p>\r\n\r\n          {wordForm()}\r\n        </div>\r\n      )}\r\n\r\n      <ul>\r\n        <li>rydde op - at ordne forskellige ting på deres rette plads</li>\r\n        <li>sammenligne - to compare</li>\r\n        <li>forskellie - lige some anderledes men forskelligt</li>\r\n      </ul>\r\n\r\n      <ul>\r\n        {words.map((word, i) => (\r\n          <li key={i} >\r\n            {word.lex}\r\n          </li>\r\n        ))}\r\n      </ul>\r\n\r\n      <Footer />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport './index.css';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n"],"sourceRoot":""}